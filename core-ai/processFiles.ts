import { extractTextFromPDF } from "./extractors/pdf";
import { extractTextFromImage } from "./extractors/image";
import { extractTextFromDocx } from "./extractors/docx";
import { extractTextFromXlsx } from "./extractors/xlsx";
import { extractTextFromDwg } from "./extractors/dwg";

/**
 * –ü—Ä–∏–µ–º–∞ —Å–ø–∏—Å—ä–∫ –æ—Ç —Ñ–∞–π–ª–æ–≤–µ –∏ –∏–∑–≤–ª–∏—á–∞ —Ç–µ–∫—Å—Ç –æ—Ç –≤—Å–µ–∫–∏, —Å–ø–æ—Ä–µ–¥ —Ç–∏–ø–∞ –º—É.
 */
export async function processFiles(files: File[]): Promise<string[]> {
  const results: string[] = [];

  for (const file of files) {
    const name = file.name.toLowerCase();

    try {
      if (name.endsWith(".pdf")) {
        const text = await extractTextFromPDF(file);
        console.log(`üìÑ –ò–∑–≤–ª–µ—á–µ–Ω —Ç–µ–∫—Å—Ç –æ—Ç PDF ${file.name}:\n`, text);
        results.push(`üìÑ ${file.name}:\n${text}`);
      } else if (name.match(/\.(png|jpe?g)$/)) {
        const text = await extractTextFromImage(file);
        console.log(`üñºÔ∏è OCR –æ—Ç ${file.name}:\n`, text);
        results.push(`üñºÔ∏è ${file.name} (OCR):\n${text}`);
      } else if (name.endsWith(".docx")) {
        const text = await extractTextFromDocx(file);
        console.log(`üìù –¢–µ–∫—Å—Ç –æ—Ç DOCX ${file.name}:\n`, text);
        results.push(`üìÑ ${file.name} (DOCX):\n${text}`);
      } else if (name.endsWith(".xlsx")) {
        const text = await extractTextFromXlsx(file);
        console.log(`üìä –î–∞–Ω–Ω–∏ –æ—Ç Excel ${file.name}:\n`, text);
        results.push(`üìä ${file.name} (Excel):\n${text}`);
      } else if (name.endsWith(".dwg")) {
        const text = await extractTextFromDwg(file);
        console.log(`üìê DWG Placeholder –∑–∞ ${file.name}:\n`, text);
        results.push(`üìê ${file.name} (DWG):\n${text}`);
      } else {
        console.log(`‚ö†Ô∏è –ù–µ–ø–æ–∑–Ω–∞—Ç —Ç–∏–ø —Ñ–∞–π–ª: ${file.name}`);
        results.push(`‚ö†Ô∏è –ù–µ–ø–æ–¥–¥—ä—Ä–∂–∞–Ω —Ç–∏–ø —Ñ–∞–π–ª: ${file.name}`);
      }
    } catch (err) {
      console.warn(`‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ —Ñ–∞–π–ª "${file.name}":`, err);
      results.push(`‚ö†Ô∏è –ù–µ—É—Å–ø–µ—à–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ ${file.name}`);
    }
  }

  return results;
}
